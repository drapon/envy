name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run tests
        run: make test

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: dist/*

  sign-macos:
    needs: release
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: dist

      - name: Import certificates
        env:
          CERTIFICATES_P12: ${{ secrets.CERTIFICATES_P12 }}
          CERTIFICATES_P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        run: |
          echo $CERTIFICATES_P12 | base64 --decode > certificate.p12
          security create-keychain -p runner-password build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p runner-password build.keychain
          security import certificate.p12 -k build.keychain -P $CERTIFICATES_P12_PASSWORD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k runner-password build.keychain

      - name: Sign binary
        env:
          DEVELOPER_ID: ${{ secrets.DEVELOPER_ID }}
        run: |
          codesign --force --options runtime --sign "$DEVELOPER_ID" \
            --timestamp dist/envy_Darwin_${{ matrix.arch }}/envy

      - name: Verify signature
        run: |
          codesign --verify --verbose dist/envy_Darwin_${{ matrix.arch }}/envy

      - name: Notarize binary
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
        run: |
          xcrun notarytool submit dist/envy_Darwin_${{ matrix.arch }}.tar.gz \
            --apple-id "$APPLE_ID" \
            --password "$APPLE_PASSWORD" \
            --team-id "$TEAM_ID" \
            --wait

      - name: Upload signed binary
        uses: actions/upload-artifact@v4
        with:
          name: envy-macos-${{ matrix.arch }}-signed
          path: dist/envy_Darwin_${{ matrix.arch }}/*

  update-homebrew:
    needs: [release, sign-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Homebrew tap
        uses: actions/checkout@v4
        with:
          repository: drapon/homebrew-envy
          token: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}

      - name: Update formula
        run: |
          # GoReleaserが自動的に更新するため、ここでは追加の処理は不要
          echo "Homebrew formula updated by GoReleaser"

  docker-scan:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/drapon/envy:${{ github.ref_name }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  create-release-pr:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Create Release PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update version to ${{ github.ref_name }}'
          title: 'Release ${{ github.ref_name }}'
          body: |
            ## リリース ${{ github.ref_name }}

            このPRは新しいリリースに関連する変更を含んでいます。

            ### 変更内容
            - バージョン番号の更新
            - CHANGELOGの更新

            ### リリースノート
            [リリースノートを確認](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }})

          branch: release/${{ github.ref_name }}
          base: main